Goals (for this screen)
	•	Find a book in <5s (search + filters).
	•	Add a book in <10s (scan/search).
	•	Resume reading in 1 tap.
	•	Manage the backlog without clutter (facets + sane defaults).
Why: fewer choices → faster decisions (Hick’s Law), and UIs should favor recognition over recall.  ￼

Information architecture (top → bottom)
	1.	Header row
	•	Search input (focus on “/”)
	•	Status chips: To-Read, Reading, On-Hold, DNF, Finished (multi-select)
	•	Sort: Priority ▾ (Priority, Recently Added, Title, Author, Last Read, Progress)
	•	View: Grid/List toggle
	•	Bulk Select: enters selection mode (checkboxes on cards)
	2.	Book grid/list
	•	Card essentials: Cover, Title, Author, Status chip, Progress bar, “Continue”/“Start” primary button.
	•	Overflow menu: Edit details, Move shelf (status), Add note, Delete.
	•	Long-press/Shift-click → multi-select.
	3.	Bulk toolbar (appears when >0 selected)
	•	Change Status, Add Tag, Delete, Export (.csv / .json)
	4.	Empty state (first-run or zero results)
	•	Big CTAs: Scan ISBN / Search by title/author
	•	One demo book to teach the UI; link to bulk import.
Why: empty states should teach and route to key actions.  ￼
	5.	Filter tray (mobile)
	•	Slide-over with facets: Status, Format, Genre, Tags, Language, Year.
Why: faceted search beats single filters at scale; trays work well on mobile.  ￼

Interaction rules (minimal friction)
	•	Progressive disclosure: only core controls visible; advanced filters live in the tray.  ￼
	•	Recognition > recall: last-used sort persists; recently used filters surface as chips; quick “+Tag” suggestions.  ￼
	•	Tap targets ≥ 44px; no tiny icons for primary actions. (Fitts & mobile target size.)  ￼
	•	Keyboard: “/” focus search, “f” open filters, “v” grid/list, “Esc” clear.

Data you’ll need (incremental to your current schema)
	•	Book: status (‘toRead’|‘reading’|‘onHold’|‘dnf’|‘finished’), priority (1–5), tags[], format (‘paper’|‘ebook’|‘audio’), language, addedAt, lastReadAt, progress (0–1), coverUrl.
	•	Store view state in URL query (search, status[], sort, view), so reloads and share links preserve the state.